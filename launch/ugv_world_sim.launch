<?xml version="1.0"?>
<launch>

  <!-- publish some extra tf frames -->
  <node name="tf_publisher" pkg="testing" type="tf_publisher" output="screen"/>
  
  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <remap from="tf" to="gazebo_tf"/>
  <!-- <remap from="odom" to="odom/gazebo" /> -->
  <!-- <remap from="ugv/laser/scan" to="scan" /> -->
  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find testing)/worlds/cone.world"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>


  <!-- Load the URDF into the ROS Parameter Server -->
  <param name="robot_description"
	 command="$(find xacro)/xacro --inorder '$(find testing)/urdf/ugv.xacro'" />

  <!-- interface xbox 360 controller -->
  <!-- <node name="cmd_vel_publisher" pkg="testing" type="cmd_vel_publisher" /> -->
  <!-- <node name="joy_node" pkg="joy" type="joy_node" /> -->

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
    args="-urdf -model ugv -param robot_description"/>

  <!-- ros_control rrbot launch file -->
  <!--include file="$(find rrbot_control)/launch/rrbot_control.launch" /-->
  <node name="sim_scan" pkg="testing" type="sim_scan" />

</launch>
